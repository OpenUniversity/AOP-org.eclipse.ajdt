<?xml version="1.0" ?>
<!-- writen for Ant 1.5.1 -->
<project name="org.eclipse.ajdt.core" default="packaged-plugin">

<description>
Create a packaged org.eclipse.ajdt.core_version plugin distribution file
</description>
<!-- VERSION-STRING -->
<!-- these property values will be overridden when called from the master build script -->
<property name="ajdt.version" value="9.9.9" />
<property name="ajde.version" value="9.9.9" />
<property name="build.dir" value="build" />
<property name="eclipse.build.id" value="30" />
<property name="eclipse.home" value="c:/eclipse/30m8/eclipse"/>

<property name="aspectj" value="c:/aspectj1.2" />
<property name="aspectjrt" value="${aspectj}/lib/aspectjrt.jar" />
<property name="aspectjtools" value="${aspectj}/lib/aspectjtools.jar" />
	
<taskdef 
    resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
	<classpath>
	    <pathelement location="${aspectjtools}"/>
	</classpath>
</taskdef>

<!-- To run this script from inside an automated build environment such 
     as Cruise Control the following properties are expected to have
     been set and passed in :-
     * external.build (set to any value) 
     * eclipse.home (set to the directory where Eclipse has been 
       installed on the build machine)
     * eclipse.build.id (override the value default value set above)
       this indicates which eclipse version to build for - there needs to
       be a .ajproperties file to, e.g. build30.ajproperties
     * aspectj (set to AspectJ install dir)
-->

<target name="init">
  <mkdir dir="${build.dir}" />
  <mkdir dir="dist"/>
</target>

<target name="clean" depends="init" >
  <delete dir="${build.dir}"/>
  <delete dir="dist"/>
</target>

<target name="externalbuild" if="external.build" >
	<delete dir="bin"/>
	<mkdir dir="bin"/>
	<property file="${eclipse.home}/ajdtworkspace.properties"/>
	<property file="build${eclipse.build.id}.ajproperties"/>
	<iajc srcdir="." destdir="bin" classpath="${aspectjrt};${classpath.org.eclipse.ajdt.core}"
	    debug="false" verbose="true" fork="true" maxmem="256m"
	    includes="${src.includes}" excludes="${src.excludes}" />
	<!--
	<javac srcdir="src" destdir="bin">
		<classpath refid="project.class.path" />
	</javac>
	-->
</target>

<target name="eclipsebuild" unless="external.build" >
	<eclipse.incrementalBuild project="org.eclipse.ajdt.core" />
</target>

<target name="buildproject" depends="externalbuild,eclipsebuild" />

<target name="ajdtjar" depends="init"
  description="Create ajdtcore.jar, the library containing the plug-in
    class files and properties.">
 <!-- The following ant call is intended to provide the flexibility 
      to build AJDT from within Eclipse or else from a command line
      run of Ant (e.g. in a Cruise Control environment).
 -->
 <antcall target="buildproject" />
  <zip destfile= "${build.dir}/ajdtcore.jar" >
  	<fileset dir="bin"/>
  </zip>
</target>

<target name="ajdtsrcjar" depends="init"
 description="The source jar file for ajdt core, ajdtcoresrc.jar">
  <zip destfile= "${build.dir}/ajdtcoresrc.jar" >
   <fileset dir="src"/>
  </zip>
</target>


<target name="packaged-plugin" depends="ajdtjar, ajdtsrcjar"
 description="Create the plugin jar file from the assembled components in the build dir">
 <copy todir="${build.dir}">
   <fileset dir=".">
     <include name="*.xml"/>
     <exclude name="build.*"/>
     <include name="*.html"/>
     <include name="*.properties"/>
     <exclude name="plugin.*xml" />
   </fileset>
 </copy>
 <copy file="plugin.xml" tofile="${build.dir}/plugin.xml">
 	<filterset begintoken="9" endtoken="9">
 		<filter token="2.2.2" value="${ajdt.version}"/>
 	</filterset>
 </copy>
 <zip destfile="dist/org.eclipse.ajdt.core_${ajdt.version}.jar" >
   <fileset dir= "build" />
 </zip>
</target>

</project>