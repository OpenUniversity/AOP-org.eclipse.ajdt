<?xml version="1.0" ?>
<!-- writen for Ant 1.5.1 -->
<project name="org.eclipse.ajdt.core.tests" default="packaged-plugin">

	<description>
Create a packaged org.eclipse.ajdt.core.tests_version plugin distribution file
</description>
	<!-- VERSION-STRING -->
	<!-- these property values will be overridden when called from the master build script -->
	<property name="ajdt.version" value="0.6.3" />
	<property name="build.dir" value="build" />
	<property name="eclipse.build.version" value="3.0.0" />
	<property name="eclipse.home" value="c:/eclipse/30m8/eclipse" />

	<property name="aspectj" value="c:/aspectj1.2" />
	<property name="aspectjrt" value="${aspectj}/lib/aspectjrt.jar" />
	<property name="aspectjtools" value="${aspectj}/lib/aspectjtools.jar" />
		
	<taskdef 
	    resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
		<classpath>
		    <pathelement location="${aspectjtools}"/>
		</classpath>
	</taskdef>

	<!-- To run this script from inside an automated build environment such 
     as Cruise Control the following properties are expected to have
     been set and passed in :-
     * external.build (set to any value) 
     * eclipse.home (set to the directory where Eclipse has been 
       installed on the build machine)
     * eclipse.build.version (override the value default value set above)
-->

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="dist" />
	</target>

	<target name="clean" depends="init">
		<delete dir="${build.dir}" />
		<delete dir="dist" />
	</target>

	<target name="externalbuild" if="external.build">
		<delete dir="bin" />
		<mkdir dir="bin" />
		<property file="${eclipse.home}/ajdtworkspace.properties"/>
		<property file="build.ajproperties"/>
		<iajc srcdir="." destdir="bin"
			classpath="${aspectjrt};${classpath.org.eclipse.ajdt.core.tests};../org.eclipse.ajdt.core/build/ajdtcore.jar"
			debug="false" verbose="true" fork="true" maxmem="256m"
			includes="${src.includes}" excludes="${src.excludes}" />	
	</target>

	<target name="eclipsebuild" unless="external.build">
		<eclipse.incrementalBuild project="org.eclipse.ajdt.core.tests" />
	</target>

	<target name="buildproject" depends="externalbuild,eclipsebuild" />

	<target name="ajdtcoretestsjar" depends="init" description="Create ajdtcoretests.jar, the library containing the plug-in
    class files and properties.">
		<!-- The following ant call is intended to provide the flexibility 
      to build AJDT from within Eclipse or else from a command line
      run of Ant (e.g. in a Cruise Control environment).
 -->
		<antcall target="buildproject" />
		<zip destfile="${build.dir}/ajdtcoretests.jar">
			<fileset dir="bin" />
		</zip>
	</target>

	<target name="ajdtcoretestssrcjar" depends="init" description="The source jar file for ajdt core tests, ajdtcoretestssrc.jar">
		<zip destfile="${build.dir}/ajdtcoretestssrc.jar">
			<fileset dir="src" />
		</zip>
	</target>

	<target name="packaged-plugin" depends="ajdtcoretestsjar, ajdtcoretestssrcjar" description="Create the plugin jar file from the assembled components in the build dir">
		 <copy todir="${build.dir}/workspace">
		   <fileset dir="workspace" />
		 </copy>
		<copy todir="${build.dir}">
			<fileset dir=".">
				<include name="*.xml" />
				<exclude name="build.*" />
				<include name="*.html" />
				<include name="*.properties" />
				<exclude name="META-INF/MANIFEST.MF" />
			</fileset>
		</copy>
		<copy file="META-INF/MANIFEST.MF" tofile="${build.dir}/META-INF/MANIFEST.MF">
			<filterset begintoken="9" endtoken="9">
				<filter token="2.2.2" value="${ajdt.version}" />
			</filterset>
		</copy>

		<zip destfile="dist/org.eclipse.ajdt.core.tests_${ajdt.version}.jar">
			<fileset dir="build" />
		</zip>
	</target>

</project>