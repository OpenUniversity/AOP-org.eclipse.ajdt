<?xml version="1.0" ?>
<!-- writen for Ant 1.5.1 -->
<project name="org.eclipse.ajdt.test" default="packaged-plugin">

	<description>
Create a packaged org.eclipse.ajdt.test_version plugin distribution file
</description>
	<!-- VERSION-STRING -->
	<!-- these property values will be overridden when called from the master build script -->
	<property name="ajdt.version" value="0.6.3" />
	<property name="build.dir" value="build" />
	<property name="eclipse.build.version" value="3.0.0" />
	<property name="eclipse.home" value="c:/eclipse/30m8/eclipse" />

	<!-- To run this script from inside an automated build environment such 
     as Cruise Control the following properties are expected to have
     been set and passed in :-
     * external.build (set to any value) 
     * eclipse.home (set to the directory where Eclipse has been 
       installed on the build machine)
     * eclipse.build.version (override the value default value set above)
-->

	<path id="project.class.path">
		<pathelement location="testsrc/" />
		<pathelement location="../org.aspectj.ajde/aspectjrt.jar" />
		<pathelement location="../org.aspectj.ajde/ajde.jar" />
		<pathelement location="../org.eclipse.ajdt.core/build/ajdtcore.jar" />
		<pathelement location="../org.eclipse.ajdt.ui/build/ajdtui.jar" />
		<pathelement location="../org.eclipse.contribution.visualiser.tests/build/visualisertests.jar" />
		<!-- <pathelement location="../org.eclipse.aosd.relationships/build/relations.jar"/> -->
		<!-- Below are dependencies that require a local install of Eclipse. -->
		<pathelement location="${eclipse.home}/plugins/org.eclipse.search_${eclipse.build.version}/search.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.core.runtime_${eclipse.build.version}/runtime.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.core.resources_${eclipse.build.version}/resources.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.ui_${eclipse.build.version}/ui.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.jdt.ui_${eclipse.build.version}/jdt.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.debug.core_${eclipse.build.version}/dtcore.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.jdt.core_${eclipse.build.version}/jdtcore.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.pde.core_${eclipse.build.version}/pdecore.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.pde.runtime_${eclipse.build.version}/pdert.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.pde_${eclipse.build.version}/pde.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.debug.ui_${eclipse.build.version}/dtui.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.jdt.debug.ui_${eclipse.build.version}/jdiui.jar" />
		<!-- Build platform issue with the below one  ? -->
		<pathelement location="${eclipse.home}/plugins/org.eclipse.swt.win32_${eclipse.build.version}/ws/win32/swt.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.jdt.launching_${eclipse.build.version}/launching.jar" />
		<pathelement location="${eclipse.home}/plugins/org.junit_3.8.1/junit.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.core.boot_${eclipse.build.version}/boot.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.jface_${eclipse.build.version}/jface.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.jface.text_${eclipse.build.version}/jfacetext.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.text_${eclipse.build.version}/text.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.ui.workbench_${eclipse.build.version}/workbench.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.ui.workbench.texteditor_${eclipse.build.version}/texteditor.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.ui.views_${eclipse.build.version}/views.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.ui.console_${eclipse.build.version}/console.jar" />

		<pathelement location="${eclipse.home}/plugins/org.eclipse.osgi_${eclipse.build.version}/osgi.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.pde.ui_${eclipse.build.version}/pdeui.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.ui.ide_${eclipse.build.version}/ide.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.ui.forms_${eclipse.build.version}/forms.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.ui.editors_${eclipse.build.version}/editors.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.update.core_${eclipse.build.version}/updatecore.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.jdt.debug_${eclipse.build.version}/jdimodel.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.pde.build_${eclipse.build.version}/pdebuild.jar" />
		<pathelement location="${eclipse.home}/plugins/org.eclipse.core.filebuffers_${eclipse.build.version}/filebuffers.jar" />

		<!-- Java runtime library : depends on the JVM used to run Ant -->
		<pathelement location="${java.home}/lib/rt.jar" />
	</path>

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="dist" />
	</target>

	<target name="clean" depends="init">
		<delete dir="${build.dir}" />
		<delete dir="dist" />
	</target>

	<target name="externalbuild" if="external.build">
		<delete dir="bin" />
		<mkdir dir="bin" />
		<javac srcdir="testsrc" destdir="bin">
			<classpath refid="project.class.path" />
		</javac>
	</target>

	<target name="eclipsebuild" unless="external.build">
		<eclipse.incrementalBuild project="org.eclipse.ajdt.test" />
	</target>

	<target name="buildproject" depends="externalbuild,eclipsebuild" />

	<target name="ajdttestjar" depends="init" description="Create ajdttest.jar, the library containing the plug-in
    class files and properties.">
		<!-- The following ant call is intended to provide the flexibility 
      to build AJDT from within Eclipse or else from a command line
      run of Ant (e.g. in a Cruise Control environment).
 -->
		<antcall target="buildproject" />
		<zip destfile="${build.dir}/ajdttest.jar">
			<fileset dir="bin" />
		</zip>
	</target>

	<target name="ajdttestsrcjar" depends="init" description="The source jar file for ajdt test, ajdttestsrc.jar">
		<zip destfile="${build.dir}/ajdttestsrc.jar">
			<fileset dir="testsrc" />
		</zip>
	</target>

	<target name="packaged-plugin" depends="ajdttestjar, ajdttestsrcjar" description="Create the plugin jar file from the assembled components in the build dir">
		 <copy todir="${build.dir}/testdata">
		   <fileset dir="testdata" />
		 </copy>
		 <copy todir="${build.dir}/test projects">
		   <fileset dir="test projects" />
		 </copy>
		<copy todir="${build.dir}">
			<fileset dir=".">
				<include name="*.xml" />
				<exclude name="build.*" />
				<include name="*.html" />
				<include name="*.properties" />
				<exclude name="plugin.*xml" />
			</fileset>
		</copy>
		<copy file="plugin.xml" tofile="${build.dir}/plugin.xml">
			<filterset begintoken="9" endtoken="9">
				<filter token="2.2.2" value="${ajdt.version}" />
			</filterset>
		</copy>

		<zip destfile="dist/org.eclipse.ajdt.test_${ajdt.version}.jar">
			<fileset dir="build" />
		</zip>
	</target>

</project>