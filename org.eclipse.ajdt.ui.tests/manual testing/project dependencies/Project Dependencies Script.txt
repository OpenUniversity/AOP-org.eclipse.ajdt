Testing Project dependencies from checkout of CVS (Bug 73435)
-------------------------------------------------

(1) Ensure that "Build Automatically" is selected in the Project drop down menu and that
	the workbench settings are aborting builds due to classpath errors:
    
		- Window > Preferences > Java > Compiler > Building > Build path problems  
		- "Abort build when classpath errors occur" option is checked.
 
(2) check out the following projects from org.eclipse.ajdt/AJDT_src 
    (on Eclipse 3.1 may need to check out the versions from the ajdt1_3 branch):

	     org.eclipse.contribution.visualiser
	     org.eclipse.contribution.visualiser.tests
	     
	(the whole point of this test is that they are checked out from CVS, so don't just
	copy them from somewhere)     
	     
(3) Without doing anything, when Eclipse has finished building the projects after
    checkout - both projects should not have any build errors. In particular, 
    org.eclipse.contribution.visualiser.tests should NOT have the message:
    "The project cannot be built until its prerequisites org.eclipse.contribution.visualiser
    is built. Cleaning and building all projects is recommended." (DEPS_1)
    
(4) Check that org.eclipse.contribution.visualiser has AJ nature  (DEPS_2)

(5) Check that org.eclipse.contribution.visualiser.tests is using the workspace compiler
    settings

    	- right click on org.eclipse.contribution.visualiser.tests
    	- select properties
    	- navigate to Java Compiler > Building
    	- check that "Enable Project specific settings" is unchecked    (DEPS_3)
    	
    
(6) Check that the workbench settings have switched to not aborting due to classpath errors:
    
		- Window > Preferences > Java > Compiler > Building > Build path problems  
		- "Abort build when classpath errors occur" option is unchecked. (DEPS_4)

(7) Switch org.eclipse.contribution.visualiser.tests to use project settings:
       
    	- right click on org.eclipse.contribution.visualiser.tests
    	- select properties
    	- navigate to Java Compiler > Building
    	- check "Enable Project specific settings"     
 		- click "OK"
    	- choose to build project NOW (if given the option)
    	
(8) org.eclipse.contribution.visualiser.tests should still build with no 
    build errors (DEPS_5)

(9) Switch the workbench settings to abort if there are classpath errors
    
		- Window > Preferences > Java > Compiler > Building > Build path problems  
		- Check the "Abort build when classpath errors occur" option
		- click "OK"
		- choose to rebuild workspace NOW
		
(10) both org.eclipse.contribution.visualiser and org.eclipse.contribution.visualiser.tests
     should build with no errors (DEPS_6)
     
(11) Choose to let org.eclipse.contribution.visualiser.tests now use the 
     workspace settings
       
    	- right click on org.eclipse.contribution.visualiser.tests
    	- select properties
    	- navigate to Java Compiler > Building
    	- uncheck "Enable Project specific settings"     
 		- click "OK"
    	- choose to build project NOW

(12) org.eclipse.contribution.visualiser should now not build due to error 
     in problems view saying that prerequisite project 
     org.eclipse.contribution.visualiser needs to be
     built first (DEPS_7)
     
(13) rebuild org.eclipse.contribution.visualiser by selecting it and 
     pressing the AJ build button
     
(14) both org.eclipse.contribution.visualiser and 
     org.eclipse.contribution.visualiser.tests
     should now have no build errors on them. (DEPS_8)
     
(15) Check that the workbench settings have switched to not aborting due 
     to classpath errors:
    
		- Window > Preferences > Java > Compiler > Building > Build path problems  
		- "Abort build when classpath errors occur" option is unchecked. (DEPS_9)

(16) Convert org.eclipse.contribution.visualiser.tests to be an AJ project

(17) Switch the workbench settings to abort if there are classpath errors
    
		- Window > Preferences > Java > Compiler > Building > Build path problems  
		- Check the "Abort build when classpath errors occur" option
		- click "OK"
		- choose to rebuild workspace NOW

(18) both org.eclipse.contribution.visualiser and org.eclipse.contribution.visualiser.tests 
     should build with no errors  (DEPS_10)
         	  
(19) Check that the workbench settings have NOT switched to not aborting due to
     classpath errors:  (DEPS_11)
    
		- Window > Preferences > Java > Compiler > Building > Build path problems  
		- "Abort build when classpath errors occur" option is still checked.
		
(20) Remove AJ nature from org.eclipse.contribution.visualiser.test

(21) org.eclipse.contribution.visualiser should now not build due to error in problems
     view saying that prerequisite project org.eclipse.contribution.visualiser needs to be
     built first (DEPS_12)
     
(22) rebuild org.eclipse.contribution.visualiser by selecting it and pressing the AJ
     build button
     
(23) both org.eclipse.contribution.visualiser and org.eclipse.contribution.visualiser.tests
     should now have no build errors on them. (DEPS_13)
     
(24) Check that the workbench settings have switched to not aborting due to 
     classpath errors:
   
		- Window > Preferences > Java > Compiler > Building > Build path problems  
		- "Abort build when classpath errors occur" option is unchecked. (DEPS_14)

(25) Switch org.eclipse.contribution.visualiser.tests to use project settings and
     to abort on classpath errors
       
    	- right click on org.eclipse.contribution.visualiser.tests
    	- select properties
    	- navigate to Java Compiler > Building
    	- check "Enable Project specific settings"  
    	- check the Build Path Problems > "Abort build when classpath errors occur" option     
 		- click "OK"
    	- choose to build project NOW
    	
(26) org.eclipse.contribution.visualiser.tests should now not build due to error 
     in problems view saying that prerequisite project 
     org.eclipse.contribution.visualiser needs to be
     built first (DEPS_15) 
    
(27) rebuild org.eclipse.contribution.visualiser by selecting it and pressing the AJ
     build button
     
(28) both org.eclipse.contribution.visualiser and org.eclipse.contribution.visualiser.tests
     should now have no build errors on them. (DEPS_16)  
     
(29) return org.eclipse.contribution.visualiser.tests to using workspace settings
     for building, but project settings for one of other compiler pages (Compiler,
     Errors/Warnings, Javadoc or TaskTags). 
 
 		- right click on org.eclipse.contribution.visualiser.tests
    	- select properties
    	- navigate to Java Compiler > Building
    	- uncheck "Enable Project specific settings"  
		- navigate to either the Compiler, Errors/Warnings, Javadoc or TaskTags
		  pages
		- check "Enable Project specific settings"  
 		- click "OK"
    	- choose to build project NOW            

(30) rebuild org.eclipse.contribution.visualiser by selecting it and pressing the AJ
     build button
     
(31) Check that the project settings for building have not been activated:

 		- right click on org.eclipse.contribution.visualiser.tests
    	- select properties
    	- navigate to Java Compiler > Building
    	- check that "Enable Project specific settings" is not selected (DEPS_17)
        

     

Testing project dependencies with empty projects (Bug 46271)
------------------------------------------------

(1) Create an empty AJ project:
 
 	- File > New > AspectJ project
 	- call it "e1"
 	- press "Finish"
 	
(2) Create an empty java project which depends on the AJ project

	- File > New > Project
	- Select "Java Project" and click "Next"
	- Call it "e2" 
	- click "Next"
	- navigate to the "projects" tab and select "e1"
	- press "Finish"

(3) Both projects should build with no build errors - in particular, there should be no 
    prerequisite message	 (DEPS_18)

	 	
Testing build cancelling with project dependencies
--------------------------------------------------

(1) Check out 

		org.eclipse.contribution.visualiser
		org.eclipse.contribution.visualiser.test
		
	from dev.eclipse.org
	
(2) Ensure that org.eclipse.contribution.visualiser is an AJ project and
    the tests project is a java project
(3) build org.eclipse.contribution.visualiser by pressing the build button and
    immediately press the "cancel" button on the build progress dialog.
(4) in the problems view:

		- for org.eclipse.contribution.visualiser: there should be one warning
		  message saying that the build was cancelled
		- for org.eclipse.contribution.visualiser.tests: there should be an 
		  error message saying you need to rebuild prerequiste project
		  org.eclipse.contribution.visualiser (there may also be other error
		  markers)  (DEPS_19)
		  
(5) rebuild org.eclipse.contribution.visualiser by pressing the build button
(6) there should be no error markers on both projects	 (DEPS_20)	        		


Testing output jar switch with "external" jars (part of 43674)
--------------------------------------------------------------

(1) Import 

		project.java.X
		project.java.Y
		
	from org.eclipse.ajdt.test\test projects
	
(2) Check that they both build with no errors and that project.java.X has a 
    project dependency on project.java.Y:
    
    	- right click on project.java.X
    	- navigate to properties
    	- in the resulting wizard, highlight "Java Build Path"
    	- go to the "projects" tab
    	- ensure that the box next to project.java.Y has a tick in it
    	- click "OK"
    	
(3) Convert project.java.Y to be an AJ project:

		- right click on project.java.Y
		- select "Convert to AspectJ project"
		
(4) Both projects should still not report any build errors (DEPS_21)

(5) Choose to send project.java.Y's output to an external jar file
    (external to the workspace):

    	- right click on project.java.Y
    	- navigate to properties
    	- in the resulting wizard, highlight "AspectJ"
    	- enter a fully qualified string in the outjar field i.e. C:\temp\firstjar.jar
    	- click "ok"
    	
(6) Build project.java.Y by pressing the build button

(7) project.java.X should now have jar file "C:\temp\firstjar.jar" on it's classpath  
   (DEPS_22)

		- a new node entitled "firstjar.jar - C:\temp" should appear in the
		  package explorer under project.java.X
		- if you open up the .classpath file, then it contains an entry with path 
		  "C:/temp/firstjar.jar"
		  
(8) Decide to send project.java.Y's output to a new external jar file with a name
    that has case differences to the filesystem:

    	- right click on project.java.Y
    	- navigate to properties
    	- in the resulting wizard, highlight "AspectJ"
    	- enter a fully qualified string in the outjar field i.e. c:\TEMP\secondjar.jar
    	  (note the change in case of "c" and "TEMP" - the outjar entry should pick
    	  the correct place - this is part of the test for Windows)
    	- click "ok"

(9) Build project.java.Y by pressing the build button

(10) project.java.X should now have jar file "C:\temp\secondjar.jar" on it's 
     classpath (note the case on Windows)  (DEPS_23)

		- a new node entitled "secondjar.jar - C:\temp" should appear in the
		  package explorer under project.java.X
		- if you open up the .classpath file, then it contains an entry with path 
		  "C:/temp/secondjar.jar"

(11) project.java.X should NOT have jar file "firstjar.jar - C:\temp" on it's classpath
     (note the case) (DEPS_24)

		- there is no node entitled "C:\temp\firstjar.jar" in the package explorer under
		  project.java.X
		- if you open up the .classpath file, then it doesn't contain an entry with path 
		  "C:/temp/firstjar.jar"		       	

(12) Decide to not to send project.java.Y's output to an external jar file:

    	- right click on project.java.Y
    	- navigate to properties
    	- in the resulting wizard, highlight "AspectJ"
    	- remove the entry in the outjar field
    	- click "ok"

(13) Build project.java.Y by pressing the build button

(14) project.java.X should NOT have jar file "C:\temp\secondjar.jar" on it's classpath
     (note the case) (DEPS_25)

		- there is no node entitled "secondjar.jar - C:\temp" in the package explorer under
		  project.java.X
		- if you open up the .classpath file, then it doesn't contain an entry with path 
		  "C:/temp/secondjar.jar"		    

    

      	     
